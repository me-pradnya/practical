interface Command { 
 public void execute(); 
} 
class Light { 
 public void on(){ 
 System.out.println("Light is on"); 
 } 
 public void off() 
 { 
 System.out.println("Light is off"); 
 } 
} 
 class LightOnCommand implements Command { 
 Light light; 
 
 public LightOnCommand(Light light) { 
 this.light = light; 
 } 
 
 public void execute() { 
 light.on(); 
 } 
 
} 
 class LightOffCommand implements Command { 
Light light; 
public LightOffCommand(Light light) { 
this.light = light; 
} 
public void execute() { 
light.off(); 
} 
} 
 class SimpleRemoteControl { 
 Command slot; 
public SimpleRemoteControl() {} 
 
 public void setCommand(Command command) { 
 slot = command; 
 } 
 
 public void buttonWasPressed() { 
 slot.execute(); 
 } 
 
} 
public class Main { 
 public static void main(String[] args) { 
 SimpleRemoteControl remote = new SimpleRemoteControl(); 
 Light light = new Light(); 
 LightOnCommand lightOn = new LightOnCommand(light); 
 
 remote.setCommand(lightOn); 
 remote.buttonWasPressed(); 
 LightOffCommand lightOff = new LightOffCommand(light); 
 remote.setCommand(lightOff); 
 remote.buttonWasPressed(); 
 } 
} 
